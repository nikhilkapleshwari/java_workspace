package com;


import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.JsonNode;
import com.model.Response;
import com.model.User;
import com.service.AuthService;
import com.util.JsonConverter;
import com.util.JwtTokenCreator;

@RestController
@CrossOrigin
public class UserController {
	
	@RequestMapping(path = "/signin", method = RequestMethod.POST)
	public ResponseEntity<Response> signInAction(@RequestBody String json){
		
		User user=this.performValidation(json);
		if(user==null)
			return new ResponseEntity<>(HttpStatus.UNAUTHORIZED);
		
		String token = JwtTokenCreator.generateToken(JsonConverter.objToJsonConverter(user));
		Response response = new Response();
		response.setToken(token);
		return new ResponseEntity<>(response, HttpStatus.CREATED);
		
	}
	
	@RequestMapping(path = "/signup", method = RequestMethod.POST)
	public ResponseEntity<Response> signUpAction(@RequestBody String json){
		JsonNode jsonNode = JsonConverter.getJsonNode(json);
		String userName = jsonNode.get("userName").textValue();
		String password = jsonNode.get("password").textValue();
		if(!AuthService.addUser(userName, password)) {
			Response response = new Response();
			response.setMessage("User already present");	
			return new ResponseEntity<>(response,HttpStatus.UNAUTHORIZED);
		}
		User user=new User(userName,password,null);
		String token = JwtTokenCreator.generateToken(JsonConverter.objToJsonConverter(user));
		Response response = new Response();
		response.setToken(token);
		return new ResponseEntity<>(response, HttpStatus.CREATED);
	}
	
	
	private User performValidation(String json) {
		JsonNode jsonNode = JsonConverter.getJsonNode(json);
		String userName = jsonNode.get("userName").textValue();
		String password = jsonNode.get("password").textValue();
		if(AuthService.validateUser(userName, password))
			return new User(userName,password,null);
		return null;
	}
}
